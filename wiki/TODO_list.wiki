= TODOs =
  * constraints in canBeScheduled -> Wouter
  * Concerning Task and TaskManager:
    * In de usecases willen we Tasks aanmaken.
      * Als de Tasks niet onmiddellijk gescheduled kunnen worden, komen ze in de task queue van de Taskmanager.
      * Als de taken wel onmiddellijk gescheduled kunnen worden, schedulen we ze.
      * Task manager moet verwittigd worden om zijn queues te updaten op de gepaste plaatsten in de usecases.
  * Factory patronen implementeren voor MedicalTest en Treatment -> Dieter
  * eten -> Stefaan
  * warehouse -> Stefaan
  * Result -> Stefaan
  * WarehouseAdmin -> Stefaan
  * AdvanceTime()
  * Een oplossing voor het system-package en de SystemStarter class
  * usecases iteratie 1, en vorige fixen.
  * nieuwe usecases van iteratie 2
  * als de tijd vooruit gaat, moeten de volgende dingen gebeuren:
    * Alle TimeTables moeten geupdate worden.
    * Het warehouse moet geupdate worden.
    * De TaskManager moet zijn queues updaten, indien er tijdsafhankelijke constraints zijn voor Schedulables.
    * ...
  * Documentatie schrijven
  * Verslag schrijven
  * ...

= Wie is er momenteel waaraan bezig? =
<p>
Dieter:  <p>
Stefaan: Result <p>
Wouter: stoppen met kijken naar filmpjes van Postal II, extra dingen van scheduler implementeren <p>

= Things that have been crossed off = 
  * Treatment Factories gemaakt en getest
  * Scheduler-bugje: waar de juiste resource bepaald wordt: checken dat ze nog niet is opgenomen in de lijst van dingen die al gevonden zijn.
  * Commentaar voor TimeTable.
  * Testing for union and intersections
  * union tests have been written.
  * Task and TaskManager have been rewritten.
  * Task has been updated.
  * Requirement-interface has been added; check javadoc for more info.
  * Alles defensief maken en documentatie schrijven en nakijken (behalve scheduler package want daar mocht Stefaan niet aankomen).
  * Scheduler debuggen
  * De dude mailen met een draft versie van het verslag en de vraag of onze scheduler nu wel objectgericht geprogrammeerd is.
  * TEKENINGETJES MAKEN ^^
  * Een klasse maken die gregoriancalendar extend en die gemakkelijke functies heeft om daarop dingen aan te passen en daarna terug te getten. Vervolgens alle Date dingen refactoren.
  * scheduler (yay!)
  * scheduler moet dynamisch gemaakt worden